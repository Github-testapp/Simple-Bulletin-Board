<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>掲示板</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap">
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <div class="container mt-5">
    <h1 class="text-center mb-4">掲示板</h1>
    <div id="category-buttons" class="mb-4 text-center">
      <!-- カテゴリーボタンがここに挿入されます -->
    </div>
    <div id="thread-container" class="row"></div>
    <form id="new-thread-form" class="mt-5">
      <div class="form-group">
        <input type="text" id="new-thread-title" class="form-control" placeholder="スレッドタイトル" required>
      </div>
      <div class="form-group">
        <textarea id="new-thread-description" class="form-control" placeholder="スレッド説明" required></textarea>
      </div>
      <button type="submit" class="btn btn-primary btn-block">スレッドを作成</button>
    </form>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', async function() {
      const categoryButtons = document.getElementById('category-buttons');
      const threadContainer = document.getElementById('thread-container');
      const newThreadForm = document.getElementById('new-thread-form');
      let currentCategoryId = null;

      async function loadCategories() {
        try {
          const response = await fetch('/api/categories');
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const categories = await response.json();
          categories.forEach(category => {
            const button = document.createElement('button');
            button.classList.add('btn', 'btn-primary', 'mr-2', 'mb-2');
            button.innerText = category.name;
            button.addEventListener('click', () => {
              currentCategoryId = category._id;
              loadThreads(category._id);
            });
            categoryButtons.appendChild(button);
          });
        } catch (error) {
          console.error("Error loading categories:", error);
        }
      }

      async function loadThreads(categoryId) {
        try {
          const response = await fetch(`/api/categories/${categoryId}/threads`);
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const threads = await response.json();
          threadContainer.innerHTML = '';
          threads.forEach(thread => {
            const threadElement = document.createElement('div');
            threadElement.classList.add('col-md-4', 'mb-4');
            threadElement.innerHTML = `
              <div class="card">
                <div class="card-body">
                  <h5 class="card-title">
                    <a href="/thread/${thread._id}">${thread.title}</a>
                  </h5>
                  <p class="card-text">${thread.description}</p>
                  <p class="text-muted">作成日時: ${new Date(thread.createdAt).toLocaleString("ja-JP", {
                    year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit", second: "2-digit", weekday: "short"
                  })}</p>
                </div>
              </div>
            `;
            threadContainer.appendChild(threadElement);
          });
        } catch (error) {
          console.error("Error loading threads:", error);
        }
      }

      newThreadForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const title = document.getElementById('new-thread-title').value;
        const description = document.getElementById('new-thread-description').value;

        try {
          const response = await fetch(`/api/threads`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ title, description, category: currentCategoryId }),
          });
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const newThread = await response.json();
          loadThreads(currentCategoryId); // 新しいスレッドを表示
          newThreadForm.reset(); // フォームをリセット
        } catch (error) {
          console.error("Error creating thread:", error);
        }
      });

      await loadCategories();
    });
  </script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
</body>
</html>
